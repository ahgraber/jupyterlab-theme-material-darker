# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: publish

on:
  release:
    types: [created]
    paths-ignore:
      - '.github/**'
      - '*.md'
      - 'LICENSE'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: Install Python
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: 3.9
      #     architecture: 'x64'
      # - name: Install node
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: '14.x'
      - name: Base Setup
        uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

      - name: Install dependencies
        run: python -m pip install jupyterlab~=3.1 jupyter-packaging~=0.10

      - name: Build the extension
        run: |
          jlpm
          jlpm run eslint:check --fix
          python -m pip install .
          jupyter labextension list 2>&1 | grep -ie "@ninerealmlabs/jupyterlab_material_night_eighties.*OK"
          python -m jupyterlab.browser_check

  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: Install Python
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: 3.9
      #     architecture: 'x64'
      # - name: Install node
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: '14.x'
      - name: Base Setup
        uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

      - name: Install dependencies
        run: python -m pip install jupyterlab~=3.1 jupyter-packaging~=0.10

      - run: npm ci

      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}

  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # - name: Install Python
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: 3.9
      #     architecture: 'x64'
      # - name: Install node
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: '14.x'
      - name: Base Setup
        uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1

      - name: Install/Upgrade dependencies
        run: |
          python -m pip install --upgrade \
            pip \
            build \
            setuptools \
            twine
            wheel \
            jupyterlab~=3.1 \
            jupyter-packaging~=0.10

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache pip
        uses: actions/cache@v1
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('package.json') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache checked links
        uses: actions/cache@v2
        with:
          path: ~/.cache/pytest-link-check
          key: ${{ runner.os }}-linkcheck-${{ hashFiles('**/.md') }}-md-links
          restore-keys: |
            ${{ runner.os }}-linkcheck-

      - name: Build
        run: |
          # pip install .
          python -m build

      # - name: Publish distribution to Test PyPI
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     password: ${{ secrets.TEST_PYPI_TOKEN }}

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
